name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [16, 18, 20]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
          cache-dependency-path: ./package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Test ESLint
        run: npm run test:eslint

      - name: Test Typescript
        run: npm run test:types

      - name: Test Markdown
        run: npm run test:markdown

      - name: Build
        run: npm run build

      - name: Test Jest
        run: npm run test:unit

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v3
        if: github.ref == 'refs/heads/main' &&
          github.repository == 'costrojs/costro' &&
          github.event_name != 'pull_request' &&
          matrix.node == '16' &&
          matrix.os == 'ubuntu-latest'
        with:
          name: coverage
          path: coverage

      - name: Test Fixtures
        run: npm run test:fixtures

  deploy-coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build
    if: success() &&
        github.ref == 'refs/heads/main' &&
        github.repository == 'costrojs/costro' &&
        github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v3

      - name: Download coverage artifacts
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: coverage

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: 'coverage/lcov.info'